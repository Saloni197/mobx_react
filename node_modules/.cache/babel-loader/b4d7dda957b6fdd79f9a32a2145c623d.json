{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\MY PC\\\\Desktop\\\\mobx-react-typescript-example\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\MY PC\\\\Desktop\\\\mobx-react-typescript-example\\\\src\\\\components\\\\TodoList\\\\index.tsx\";\n\nimport React, { useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport TodoItem from \"../TodoItem\";\nimport { StyledTodoList, StyledHeader, Container } from \"./styles\";\nimport { Button } from \"@material-ui/core\";\nimport ModalNewTodo from \"../ModalNewTodo\";\nimport { useStores } from \"../../use-stores\";\nvar TodoList = observer(function () {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalNewTodoIsOpen = _useState2[0],\n      setModalNewTodo = _useState2[1];\n\n  var _useStores = useStores(),\n      todoStore = _useStores.todoStore;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, modalNewTodoIsOpen && /*#__PURE__*/React.createElement(ModalNewTodo, {\n    isOpen: modalNewTodoIsOpen,\n    closeModal: function closeModal() {\n      return setModalNewTodo(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \"mobx todo\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: function onClick() {\n      return setModalNewTodo(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"Add new\")), /*#__PURE__*/React.createElement(StyledTodoList, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, todoStore.incompleteTodos.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 54\n    }\n  }, \"Nothing to do!\"), todoStore.incompleteTodos.map(function (todo) {\n    return /*#__PURE__*/React.createElement(TodoItem, {\n      key: todo.id,\n      todo: todo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }\n    });\n  }))));\n});\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/MY PC/Desktop/mobx-react-typescript-example/src/components/TodoList/index.tsx"],"names":["React","useState","observer","TodoItem","StyledTodoList","StyledHeader","Container","Button","ModalNewTodo","useStores","TodoList","modalNewTodoIsOpen","setModalNewTodo","todoStore","incompleteTodos","length","map","todo","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,SAAvC,QAAwD,UAAxD;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,IAAMC,QAAQ,GAAGR,QAAQ,CAAC,YAAM;AAAA,kBACgBD,QAAQ,CAAC,KAAD,CADxB;AAAA;AAAA,MACvBU,kBADuB;AAAA,MACHC,eADG;;AAAA,mBAERH,SAAS,EAFD;AAAA,MAEtBI,SAFsB,cAEtBA,SAFsB;;AAI9B,sBACE,0CACGF,kBAAkB,iBACjB,oBAAC,YAAD;AACE,IAAA,MAAM,EAAEA,kBADV;AAEE,IAAA,UAAU,EAAE;AAAA,aAAMC,eAAe,CAAC,KAAD,CAArB;AAAA,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAOE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMA,eAAe,CAAC,IAAD,CAArB;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF,eAWE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,SAAS,CAACC,eAAV,CAA0BC,MAA1B,KAAqC,CAArC,iBAA0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAD7C,EAEGF,SAAS,CAACC,eAAV,CAA0BE,GAA1B,CAA8B,UAAAC,IAAI,EAAI;AACrC,wBAAO,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,MAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CAFH,CAXF,CAPF,CADF;AAkCD,CAtCwB,CAAzB;AAwCA,eAAeP,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport TodoItem from \"../TodoItem\";\nimport { StyledTodoList, StyledHeader, Container } from \"./styles\";\nimport { Button } from \"@material-ui/core\";\nimport ModalNewTodo from \"../ModalNewTodo\";\nimport { useStores } from \"../../use-stores\";\n\nconst TodoList = observer(() => {\n  const [modalNewTodoIsOpen, setModalNewTodo] = useState(false);\n  const { todoStore } = useStores();\n\n  return (\n    <>\n      {modalNewTodoIsOpen && (\n        <ModalNewTodo\n          isOpen={modalNewTodoIsOpen}\n          closeModal={() => setModalNewTodo(false)}\n        />\n      )}\n      <Container>\n        <StyledHeader>\n          <h2>mobx todo</h2>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => setModalNewTodo(true)}\n          >\n            Add new\n          </Button>\n        </StyledHeader>\n        <StyledTodoList>\n          {todoStore.incompleteTodos.length === 0 && <p>Nothing to do!</p>}\n          {todoStore.incompleteTodos.map(todo => {\n            return <TodoItem key={todo.id} todo={todo} />;\n          })}\n        </StyledTodoList>\n        {/* <h3>completed {todoStore.todoProgress}</h3>\n        <StyledTodoList>\n          {todoStore.completedTodos.map(todo => {\n            return <TodoItem key={todo.id} todo={todo} />;\n          })}\n        </StyledTodoList> */}\n      </Container>\n    </>\n  );\n});\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}