{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\MY PC\\\\Desktop\\\\mobx_todos\\\\mobx_project1\\\\mobx-react-typescript-example\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\MY PC\\\\Desktop\\\\mobx_todos\\\\mobx_project1\\\\mobx-react-typescript-example\\\\src\\\\components\\\\ModalNewTodo\\\\index.tsx\";\n\nimport React, { useState } from \"react\";\nimport { Modal, Button, TextField } from \"@material-ui/core\";\nimport { ModalContent } from \"./styles\";\nimport { useStores } from \"../../use-stores\";\n\nvar ModalNewTodo = function ModalNewTodo(_ref) {\n  var isOpen = _ref.isOpen,\n      closeModal = _ref.closeModal;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useStores = useStores(),\n      todoStore = _useStores.todoStore;\n\n  var handleChange = function handleChange(e) {\n    setText(e.target.value);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    var newTodo = {\n      id: Date.now(),\n      text: text,\n      completed: false\n    };\n    todoStore.addTodo(newTodo);\n    closeModal();\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    \"aria-labelledby\": \"modal-new-todo\",\n    open: isOpen,\n    onClose: closeModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"modal-new-todo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Add new Todo\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-basic\",\n    autoFocus: true,\n    label: \"Todo\",\n    fullWidth: true,\n    onChange: function onChange(e) {\n      return handleChange(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: text.length === 0,\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      marginTop: \"1rem\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default ModalNewTodo;","map":{"version":3,"sources":["C:/Users/MY PC/Desktop/mobx_todos/mobx_project1/mobx-react-typescript-example/src/components/ModalNewTodo/index.tsx"],"names":["React","useState","Modal","Button","TextField","ModalContent","useStores","ModalNewTodo","isOpen","closeModal","text","setText","todoStore","handleChange","e","target","value","handleSubmit","preventDefault","newTodo","id","Date","now","completed","addTodo","length","marginTop"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,mBAAzC;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAOA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAoC;AAAA,MAAjCC,MAAiC,QAAjCA,MAAiC;AAAA,MAAzBC,UAAyB,QAAzBA,UAAyB;;AAAA,kBAC/BR,QAAQ,CAAC,EAAD,CADuB;AAAA;AAAA,MAChDS,IADgD;AAAA,MAC1CC,OAD0C;;AAAA,mBAEjCL,SAAS,EAFwB;AAAA,MAE/CM,SAF+C,cAE/CA,SAF+C;;AAIvD,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAA4C;AAC9DH,IAAAA,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACF,GAFD;;AAIA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACH,CAAD,EAAwB;AAC3CA,IAAAA,CAAC,CAACI,cAAF;AACA,QAAMC,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EADU;AAEdZ,MAAAA,IAAI,EAAJA,IAFc;AAGda,MAAAA,SAAS,EAAE;AAHG,KAAhB;AAKAX,IAAAA,SAAS,CAACY,OAAV,CAAkBL,OAAlB;AACAV,IAAAA,UAAU;AACX,GATD;;AAWA,sBACE,oBAAC,KAAD;AAAO,uBAAgB,gBAAvB;AAAwC,IAAA,IAAI,EAAED,MAA9C;AAAsD,IAAA,OAAO,EAAEC,UAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,EAAE,EAAC,gBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAM,IAAA,QAAQ,EAAEQ,YAAhB;AAA8B,IAAA,UAAU,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,gBADL;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,QAAQ,EAAE,kBAACH,CAAD;AAAA,aACPD,YAAY,CAACC,CAAD,CADL;AAAA,KALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAEJ,IAAI,CAACe,MAAL,KAAgB,CAD5B;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,OAAO,EAAC,WAJV;AAKE,IAAA,KAAK,EAAC,SALR;AAME,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,CAFF,CADF,CADF;AA4BD,CA/CD;;AAiDA,eAAenB,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Modal, Button, TextField } from \"@material-ui/core\";\nimport { ModalContent } from \"./styles\";\nimport { useStores } from \"../../use-stores\";\n\ninterface IProps {\n  isOpen: boolean;\n  closeModal: () => void;\n}\n\nconst ModalNewTodo = ({ isOpen, closeModal }: IProps) => {\n  const [text, setText] = useState(\"\");\n  const { todoStore } = useStores();\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n     setText(e.target.value);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const newTodo = {\n      id: Date.now(),\n      text,\n      completed: false\n    };\n    todoStore.addTodo(newTodo);\n    closeModal();\n  };\n\n  return (\n    <Modal aria-labelledby=\"modal-new-todo\" open={isOpen} onClose={closeModal}>\n      <ModalContent>\n        <h2 id=\"modal-new-todo\">Add new Todo</h2>\n        <form onSubmit={handleSubmit} noValidate>\n          <TextField\n            id=\"standard-basic\"\n            autoFocus\n            label=\"Todo\"\n            fullWidth\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n               handleChange(e)\n            }\n          />\n          <Button\n            disabled={text.length === 0}\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginTop: \"1rem\" }}\n          >\n            Submit\n          </Button>\n        </form>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default ModalNewTodo;\n"]},"metadata":{},"sourceType":"module"}